<?xml version="1.0"?>
<ruleset name="WordPoints">
	<description>Sniffs for the coding standards of the WordPoints plugin</description>

	<rule ref="WordPress-Extra">
		<exclude name="WordPress.Variables.GlobalVariables" />
	</rule>

	<rule ref="WordPress-Docs">
		<!-- I usually put an empty line before the file comment -->
		<exclude name="Squiz.Commenting.FileComment.SpacingAfterOpen" />
		<!-- This conflicts with heading comments within classes and EOF comments -->
		<exclude name="Squiz.Commenting.InlineComment" />
		<!-- These conflict with just putting a @since on child class var/method -->
		<exclude name="Generic.Commenting.DocComment.MissingShort" />
		<exclude name="Squiz.Commenting.VariableComment.MissingVar" />
		<!-- Forbids having a blank line before a block comment. -->
		<exclude name="Squiz.Commenting.BlockComment.HasEmptyLineBefore" />
		<!-- Conflicts with array hash notation. -->
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop" />
		<!-- I like to leave out param docs on child methods and hooks. -->
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
		<!-- https://github.com/squizlabs/PHP_CodeSniffer/issues/601 -->
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectTypeHint" />
	</rule>
	<!-- This will flag // Silence is golden index.php files. -->
	<rule ref="Squiz.Commenting.FileComment.WrongStyle">
		<exclude-pattern>*/index.php</exclude-pattern>
	</rule>

	<rule ref="WordPress-VIP">
		<exclude name="WordPress.VIP.RestrictedFunctions.switch_to_blog" />
		<exclude name="WordPress.VIP.RestrictedFunctions.custom_role" />
		<exclude name="WordPress.VIP.RestrictedFunctions.wp_is_mobile" />
		<exclude name="WordPress.VIP.SuperGlobalInputUsage" />
		<exclude name="WordPress.VIP.DirectDatabaseQuery.SchemaChange" />
		<exclude name="WordPress.VIP.DirectDatabaseQuery.DirectQuery" />
		<!--
			These rules are excluded because they produce error-level false
			positives. They will be added back in when the changes are committed to
			the stable version upstream. Until then, the issue numbers are supplied.
		-->
		<exclude name="WordPress.VIP.RestrictedFunctions.user_meta" /><!-- WordPoints/wordpoints#90 -->
		<exclude name="WordPress.VIP.RestrictedVariables.user_meta" /><!-- WordPoints/wordpoints#90 -->
		<exclude name="WordPress.VIP.SlowDBQuery" /><!-- WordPoints/wordpoints#90 -->
	</rule>
	<rule ref="WordPress.NamingConventions.ValidFunctionName">
		<exclude-pattern>/tests/*</exclude-pattern><!-- because of PHPUnit method names -->
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName">
		<properties>
			<property name="customVariablesWhitelist" value="I,EZSQL_ERROR" type="array" />
		</properties>
	</rule>
	<rule ref="WordPress.VIP.RestrictedVariables">
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.VIP.DirectDatabaseQuery">
		<properties>
			<property name="customCacheDeleteFunctions" value="wordpoints_flush_points_logs_caches" type="array" />
		</properties>
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.VIP.ValidatedSanitizedInput">
		<properties>
			<property name="customSanitizingFunctions" value="wordpoints_int,wordpoints_posint,wordpoints_negint,wordpoints_verify_nonce" type="array" />
			<property name="customUnslashingSanitizingFunctions" value="wordpoints_int,wordpoints_posint,wordpoints_negint" type="array" />
		</properties>
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.XSS.EscapeOutput">
		<properties>
			<property name="customEscapingFunctions" value="wordpoints_int,wordpoints_posint,wordpoints_negint,wordpoints_format_points,wordpoints_sanitize_wp_error" type="array" />
		</properties>
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.VIP.FileSystemWritesDisallow">
		<exclude-pattern>/tools/*</exclude-pattern>
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_after_check" value="0" />
		</properties>
	</rule>

	<rule ref="PSR2.ControlStructures.ElseIfDeclaration" />

	<rule ref="WordPoints.PHP.MissingEcho" />
	<rule ref="WordPoints.PHP.RequiredParentMethodCall" />

	<rule ref="WordPress.CSRF.NonceVerification">
		<properties>
			<property name="customNonceVerificationFunctions" value="wordpoints_verify_nonce" type="array" />
		</properties>
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.WP.PreparedSQL">
		<exclude-pattern>/tests/*</exclude-pattern>
	</rule>

	<rule ref="WordPoints.PHPUnit.MissingCovers">
		<exclude-pattern>^((?!(.*/MissingCoversUnitTest\.inc$|/tests/phpunit/tests/.*)))</exclude-pattern>
	</rule>

	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

	<rule ref="Generic.Files.LowercasedFilename.NotFound">
		<exclude-pattern>/tests/codeception/*</exclude-pattern>
	</rule>

	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/dev-lib/*</exclude-pattern>

</ruleset>
