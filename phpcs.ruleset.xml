<?xml version="1.0"?>
<ruleset name="WordPoints-Dev-Lib">
	<description>Sniffs for the coding standards of the WordPoints plugin</description>

	<rule ref="phpcs/WordPoints/ruleset.xml">
		<exclude name="WordPress.XSS.EscapeOutput" />
		<exclude name="WordPress.CSRF.NonceVerification" />
		<exclude name="WordPress.WP.PreparedSQL" />
		<exclude name="WordPress.VIP.DirectDatabaseQuery.NoCaching" />
	</rule>

	<rule ref="WordPress.PHP.DiscouragedPHPFunctions">
		<properties>
			<property name="exclude" value="system_calls" />
		</properties>
	</rule>

	<rule ref="WordPress.WP.AlternativeFunctions">
		<properties>
			<property name="exclude" value="file_system_read" />
		</properties>
	</rule>

	<rule ref="WordPress.VIP.FileSystemWritesDisallow">
		<properties>
			<property name="exclude" value="file_ops" />
		</properties>
	</rule>

	<rule ref="Generic.Files.OneClassPerFile.MultipleFound">
		<exclude-pattern>/i18n/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidVariableName">
		<exclude-pattern>/wpcept/*</exclude-pattern>
		<exclude-pattern>/phpcs/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
		<exclude-pattern>/wpcept/*</exclude-pattern>
	</rule>

	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>/wpcept/*</exclude-pattern>
		<exclude-pattern>/phpcs/*</exclude-pattern>
	</rule>

	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod.Found">
		<exclude-pattern>/phpunit/classes/mock/*</exclude-pattern>
		<exclude-pattern>/phpunit/classes/testcase.php</exclude-pattern>
	</rule>

	<rule ref="WordPress.PHP.DevelopmentFunctions">
		<properties>
			<property name="exclude" value="error_log" />
		</properties>
	</rule>

	<exclude-pattern>/phpcs/WordPoints/Tests/*</exclude-pattern>

</ruleset>
